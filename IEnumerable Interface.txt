using System;
using System.Collections;
using System.Collections.Generic;


namespace Collection_Interfaces
{
    /*
     *                                                          IEnumerable Interface
     *                                      Generic - non_Generic
     *                                      if for iterating over collections, including arrays,lists etc...
     *                                      Base interface for all collection support for simple iterating over a collection
     *                                      iterated over using foreach loop 
     *                                      It is also crucial for LINQ 
     *                                      
     *                               How IEnumerable Works:
     *                                   difines a GetEnumerator which returns an IEnumerator object
     *                                   IEnumerator allows for moving through a collection, accessing elements.
     *                                   IEnumerator Provides the mechanism for iteration with three key componenets:
     *                                      1- MoveNext() 
     *                                      2- Reset()
     *                                      3- Current()
    */
        public class CustomCollection<T> : IEnumerable<T>
        {
            private List<T> items = new List<T>();


            public IEnumerator<T> GetEnumerator()
            {
                for (int i = 0; i < items.Count; i++)
                {
                    yield return items[i];
                }
            }


            IEnumerator IEnumerable.GetEnumerator()
            {
                return GetEnumerator();
            }


            public void Add(T item)
            {
                items.Add(item);
            }
        }


        class Program
        {
            static void Main(string[] args)
            {
                var myCollection = new CustomCollection<int>();
                myCollection.Add(1);
                myCollection.Add(2);
                myCollection.Add(3);


                foreach (var item in myCollection)
                {
                    Console.WriteLine(item);
                }
                Console.ReadKey();
            }
        }
    
}
