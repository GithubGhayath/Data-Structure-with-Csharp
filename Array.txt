using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Multiple
{
    /*
          
                    Arrays:
                        An array is a collection of elements, each identified by an index.
                        C# arrays are zero-based, meaning the index of the first element is 0.
                    Declaring and Initializing Arrays:
                        Declaration and initialization can be done in various ways.
                    Common Array Operations
                        Common operations include accessing, iterating, and modifying array elements.

                    Operations Covered:
                        Accessing Elements
                        Iterating with Loops
                        Modifying Elements
                        Using Length Property 
                    Advanced Operations on Arrays
                        Advanced operations extend the functionality of arrays, enabling sorting, searching, and working with multidimensional arrays.

                    Operations Covered
                        Sorting
                        Searching
     */
    internal class Program
    {
        static void Main(string[] args)
        {
            // Initializing an array with values
            string[] names = { "Alice", "Bob", "Charlie" };


            // Display the names
            foreach (string name in names)
            {
                Console.WriteLine(name);
            }

            //Common Operations on Arrays in C#
            // Initializing an array
            int[] numbers1 = { 1, 2, 3, 4, 5 };


            // Accessing and modifying elements
            numbers1[0] = 10;


            // Using for loop for iteration
            for (int i = 0; i < numbers1.Length; i++)
            {
                Console.WriteLine("Element at index " + i + ": " + numbers1[i]);
            }

            //Advanced Array Operations
            // Initializing an array
            int[] numbers2 = { 5, 3, 1, 4, 2 };


            // Sorting the array
            Array.Sort(numbers2);


            // Display the sorted array
            Console.WriteLine("Sorted array:");
            foreach (int number in numbers2)
            {
                Console.WriteLine(number);
            }


            // Searching for an element, this will return the index for the element you searched for.
            int index = Array.IndexOf(numbers2, 4);
            Console.WriteLine("\nIndex of 4: " + index);

             // Original array
        int[] original = { 1, 2, 3, 4, 5 };


        // Array to hold the copy
        int[] copy = new int[5];


        // Copying array
        Array.Copy(original, copy, original.Length);


        // Displaying the copied array
        Console.WriteLine("Copied Array:");
        foreach (int element in copy)
        {
            Console.WriteLine(element);
        }
       		// Array of numbers
        int[] numbers5 = { 1, 2, 3, 4, 5 };


        // Using LINQ to filter and transform data
        var evenSquares = numbers5.Where(n => n % 2 == 0).Select(n => n * n);


        // Displaying results
        Console.WriteLine("Squares of even numbers:");
        foreach (var num in evenSquares)
        {
            Console.WriteLine(num);
        }
// Array of people with Name and Age
        var people = new[]
        {
            new { Name = "Alice", Age = 30 },
            new { Name = "Bob", Age = 25 },
            new { Name = "Charlie", Age = 35 },
            new { Name = "Diana", Age = 30 },
            new { Name = "Ethan", Age = 25 }
        };


        // Grouping people by Age, then ordering within each group
        var groupedByAge = people.GroupBy(p => p.Age)
                                 .Select(group => new
                                 {
                                     Age = group.Key,
                                     People = group.OrderBy(p => p.Name)
                                 });


        // Displaying the results
        foreach (var group in groupedByAge)
        {
            Console.WriteLine($"Age Group: {group.Age}");
            foreach (var person in group.People)
            {
                Console.WriteLine($" - {person.Name}");
            }
        }
 // Array of numbers
        int[] numbers6 = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };


        // Filtering to get only even numbers
        var evenNumbers = numbers6.Where(n => n % 2 == 0);


        // Aggregating - calculating the sum of even numbers
        int sumOfEvenNumbers = evenNumbers.Sum();


        // Displaying the results
        Console.WriteLine("Even Numbers:");
        foreach (var num in evenNumbers)
        {
            Console.Write(num + " ");
        }
        Console.WriteLine($"\nSum of Even Numbers: {sumOfEvenNumbers}");

       Console.ReadKey();
        }
    }
}
